{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/ts5-channel-image-generator/ts5-channel-image-generator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/runner/work/ts5-channel-image-generator/ts5-channel-image-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { throttle } from \"lodash\";\nexport var CHANNEL_HEIGHT = 22;\nexport var CHANNEL_BANNER_HEIGHT = 30;\nexport var CHANNEL_BANNER_WIDTH = 500;\nvar initialValue = {\n  options: {\n    slices: 5,\n    yOffset: 0,\n    ignoreSpacing: false\n  },\n  results: [],\n  inputFile: {\n    data: null,\n    height: 30,\n    width: 100\n  },\n  exportStatus: {\n    start: null,\n    end: null,\n    delta: null\n  }\n};\nexport var ImageManipulationContext = /*#__PURE__*/React.createContext(initialValue);\n\nfunction getCanvasAdnImageWithImage(image, channelHeight) {\n  var canvas = document.createElement('canvas');\n  canvas.width = CHANNEL_BANNER_WIDTH;\n  canvas.height = channelHeight;\n  var img = new Image();\n  img.src = image; // TODO: This should probably be asynchronous\n\n  return [canvas, img];\n}\n\nfunction getClippedRegion(canvas, img, x, y, width, height, channelHeight) {\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(img, x, y, width, height, 0, 0, CHANNEL_BANNER_WIDTH, channelHeight);\n  return canvas.toDataURL();\n}\n\nexport var getSlicesCount = function getSlicesCount(width, height, channelHeight) {\n  var sizeRatio = width / CHANNEL_BANNER_WIDTH;\n  return ~~(height / (channelHeight * sizeRatio));\n};\n\nvar generateImages = function generateImages(inputFile, options, cb) {\n  var channelHeight = options.ignoreSpacing ? CHANNEL_HEIGHT : CHANNEL_BANNER_HEIGHT;\n  var sizeRatio = inputFile.width / CHANNEL_BANNER_WIDTH;\n  var slicesCount = getSlicesCount(inputFile.width, inputFile.height, channelHeight);\n\n  var _getCanvasAdnImageWit = getCanvasAdnImageWithImage(inputFile.data, channelHeight),\n      _getCanvasAdnImageWit2 = _slicedToArray(_getCanvasAdnImageWit, 2),\n      canvas = _getCanvasAdnImageWit2[0],\n      image = _getCanvasAdnImageWit2[1];\n\n  var result = [];\n\n  for (var i = 0; i < options.slices; i++) {\n    result.push(getClippedRegion(canvas, image, 0, options.yOffset + i * (channelHeight * sizeRatio), inputFile.width, inputFile.height / slicesCount, channelHeight));\n  }\n\n  cb(result);\n};\n\nvar THROTTLE_TIME = 100;\nvar debouncedGenerateImage = throttle(generateImages, THROTTLE_TIME);\n\nvar ImageManipulation = function ImageManipulation(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(initialValue.results),\n      results = _useState[0],\n      setResults = _useState[1];\n\n  var _useState2 = useState(initialValue.options),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState(initialValue.inputFile),\n      inputFile = _useState3[0],\n      setInputFile = _useState3[1];\n\n  var _useState4 = useState(initialValue.exportStatus),\n      exportStatus = _useState4[0],\n      setExportStatus = _useState4[1];\n\n  useEffect(function () {\n    if (inputFile.data == null) return;\n    var start = Date.now();\n    setExportStatus(function (c) {\n      return _objectSpread(_objectSpread({}, c), {}, {\n        start: start,\n        end: null\n      });\n    });\n    debouncedGenerateImage(inputFile, options, function (results) {\n      setResults(results);\n      var end = Date.now();\n      setExportStatus(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          end: end,\n          delta: end - start\n        });\n      });\n    });\n  }, [inputFile, options]);\n  useEffect(function () {\n    var slices = getSlicesCount(inputFile.width, inputFile.height, options.ignoreSpacing ? CHANNEL_HEIGHT : CHANNEL_BANNER_HEIGHT);\n    setOptions(function (o) {\n      return _objectSpread(_objectSpread({}, o), {}, {\n        slices: slices,\n        yOffset: 0\n      });\n    });\n  }, [inputFile]);\n  var value = {\n    results: results,\n    options: options,\n    setOptions: setOptions,\n    inputFile: inputFile,\n    setInputFile: setInputFile,\n    exportStatus: exportStatus,\n    setExportStatus: setExportStatus\n  };\n  return /*#__PURE__*/_jsx(ImageManipulationContext.Provider, {\n    value: value,\n    children: children\n  });\n};\n\nexport default ImageManipulation;","map":null,"metadata":{},"sourceType":"module"}